import Marcas.*
import Jarras.*
import Personas.*
import Carpas.*

describe "carpas"{
	const corona = new CervezaRubia(lupulo=5,paisDeOrigen="mexico",graduacion=5)
	const guiness = new CervezaNegra(lupulo=1,paisDeOrigen="irlanda")
	const hofbrau = new CervezaRoja(lupulo=1.2,paisDeOrigen="alemania")
	
	const jarra1 = new Jarra(capacidadEnLitros=2,marca=hofbrau)
	const jarra2 = new Jarra(capacidadEnLitros=1,marca=guiness)
	const jarra3 = new Jarra(capacidadEnLitros=0.5,marca=corona)
	const jarra4 = new Jarra(capacidadEnLitros=0.5,marca=hofbrau)
	const jarra5 = new Jarra(capacidadEnLitros=5,marca=guiness)
	
	const belga = new Belgas(peso=120,nivelDeAguante=70)
	const checo = new Checos(peso=60,nivelDeAguante=15,leGustaLaMusicaTradicional=false)
	const aleman = new Aleman(peso=100,nivelDeAguante=50,leGustaLaMusicaTradicional=false)
	const aleman2 = new Aleman(peso=80,nivelDeAguante=40)
	
	const carpaCorona = new Carpa(limeteDeGente=3,cervezaDisponible=corona)
	const carpaCorona2 = new Carpa(limeteDeGente=3,tieneBandaTradicional=false,cervezaDisponible=corona)
	const carpaGuiness = new Carpa(limeteDeGente=5,tieneBandaTradicional=false,cervezaDisponible=guiness)
	const carpaHofbrau = new Carpa(limeteDeGente=10,cervezaDisponible=hofbrau)
	const carpaPrueba = new Carpa(limeteDeGente=3,cervezaDisponible=hofbrau,personasEnLaCarpa=[belga,aleman,aleman2])
	fixture{
		belga.comprarJarra(jarra2)
		checo.comprarJarra(jarra3)
		aleman.comprarJarra(jarra4)
		aleman2.comprarJarra(jarra5)
		aleman2.comprarJarra(jarra1)
		aleman2.comprarJarra(jarra1)
	}
	test "quiere entrar a carpa"{
		assert.that(belga.quiereEntrar(carpaCorona))
		assert.notThat(belga.quiereEntrar(carpaCorona2))
		assert.notThat(belga.quiereEntrar(carpaGuiness))
		assert.notThat(belga.quiereEntrar(carpaHofbrau))
		assert.notThat(checo.quiereEntrar(carpaCorona))
		assert.notThat(checo.quiereEntrar(carpaGuiness))
		assert.notThat(checo.quiereEntrar(carpaHofbrau))
		assert.notThat(aleman.quiereEntrar(carpaCorona))
		assert.that(aleman.quiereEntrar(carpaGuiness))
		assert.notThat(aleman.quiereEntrar(carpaHofbrau))
	}
	test "dejar ingresar a carpa"{
		assert.notThat(carpaCorona.dejaIngresar(belga))
		//assert.that(carpaCorona.dejaIngresar(checo))
		//assert.notThat(carpaCorona.dejaIngresar(aleman))
		assert.notThat(carpaCorona.dejaIngresar(aleman2))
		assert.notThat(carpaGuiness.dejaIngresar(belga))
		//assert.notThat(carpaGuiness.dejaIngresar(checo))
		assert.that(carpaGuiness.dejaIngresar(aleman))
		assert.notThat(carpaGuiness.dejaIngresar(aleman2))
		assert.notThat(carpaHofbrau.dejaIngresar(belga))
	//	assert.notThat(carpaHofbrau.dejaIngresar(checo))
		//assert.notThat(carpaHofbrau.dejaIngresar(aleman))
		assert.notThat(carpaHofbrau.dejaIngresar(aleman2))
	}
/*no supe como aplicarlo en el test y ademas no tuve tiempo para que ingrese a la carpa pero el mensaje
funciona correctamente por consola*/

//al igual que el anterior no supe como implementar el error en el test, pero funciona		
	test "servir jarra"{
		assert.equals(1,belga.cantidadJarrasCompradas())
		carpaPrueba.servirJarra(belga,1)
		carpaPrueba.servirJarra(belga,3)
		assert.equals(3,belga.cantidadJarrasCompradas())
	}
	test "cantidad ebrios empedernidos"{
		assert.equals(2,carpaPrueba.cuantosEbriosEmpedernidosHay())
	}
	test "patriotas"{
		assert.that(aleman.esPatriota())
		assert.notThat(aleman2.esPatriota())
		assert.notThat(checo.esPatriota())
		assert.notThat(belga.esPatriota())
		
	}
}