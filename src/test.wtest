
import Marcas.*
import Jarras.*
import Personas.*

describe "Cervezas, jarras y personas"{
	const corona = new CervezaRubia(lupulo=5,paisDeOrigen="mexico",graduacion=5)
	const guiness = new CervezaNegra(lupulo=1,paisDeOrigen="irlanda")
	const hofbrau = new CervezaRoja(lupulo=1.2,paisDeOrigen="alemania")
	
	const jarra1 = new Jarra(capacidadEnLitros=2,marca=hofbrau)
	const jarra2 = new Jarra(capacidadEnLitros=1,marca=guiness)
	const jarra3 = new Jarra(capacidadEnLitros=0.5,marca=corona)
	const jarra4 = new Jarra(capacidadEnLitros=0.5,marca=hofbrau)
	const jarra5 = new Jarra(capacidadEnLitros=5,marca=guiness)
	
	const belga = new Belgas(peso=120,nivelDeAguante=70)
	const checo = new Checos(peso=60,nivelDeAguante=15,leGustaLaMusicaTradicional=false)
	const aleman = new Aleman(peso=100,nivelDeAguante=50)
	const aleman2 = new Aleman(peso=80,nivelDeAguante=40)

	fixture{
		belga.comprarJarra(jarra2)
		checo.comprarJarra(jarra3)
		aleman.comprarJarra(jarra4)
		aleman2.comprarJarra(jarra5)
		aleman2.comprarJarra(jarra1)
		aleman2.comprarJarra(jarra1)
	}
	test "cervezas y graduacion"{
		assert.equals(6,guiness.graduacionAlcoholica())
		assert.equals(8,hofbrau.graduacionAlcoholica())	 	
	}
	test "jarras"{
		assert.equals(0.16,jarra1.contenidoDeAlcohol())
		assert.equals(0.06,jarra2.contenidoDeAlcohol())
		assert.equals(0.025,jarra3.contenidoDeAlcohol())
		assert.equals(0.04,jarra4.contenidoDeAlcohol())
	}
	test "personas"{
		assert.equals(0.06,belga.alcoholIngerido())
		assert.equals(0.025,checo.alcoholIngerido())
		assert.equals(0.04,aleman.alcoholIngerido())
		assert.equals(0.62,aleman2.alcoholIngerido())
	}	
	test "ebrios"{
		assert.notThat(belga.estaEbrio())
		assert.notThat(checo.estaEbrio())
		assert.notThat(checo.estaEbrio())
		assert.that(aleman2.estaEbrio())
	}
		test "personas gustos"{
		assert.that(belga.leGustaLaMarcaDe(corona))
		assert.notThat(belga.leGustaLaMarcaDe(guiness))
		assert.notThat(belga.leGustaLaMarcaDe(hofbrau))
		assert.notThat(checo.leGustaLaMarcaDe(hofbrau))
		assert.notThat(checo.leGustaLaMarcaDe(guiness))
		assert.notThat(checo.leGustaLaMarcaDe(corona))
		assert.that(aleman.leGustaLaMarcaDe(corona))
		assert.that(aleman.leGustaLaMarcaDe(guiness))
		assert.that(aleman.leGustaLaMarcaDe(hofbrau))
	}
}